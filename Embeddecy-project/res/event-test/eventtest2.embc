#define LEDS (GPIO_Pin_8 | GPIO_Pin_9 | GPIO_Pin_10)


task task1 {

	event e2(int x);
	body {
	  
		  task1.e2 += (int x) -> {
		  	if (x == 784) {
		  		if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_0)) {
					GPIO_SetBits(GPIOE, GPIO_Pin_8);
					delay_ms(100);
					GPIO_ResetBits(GPIOE, GPIO_Pin_8);
					delay_ms(100);
				}
			}
		  };
		for (;;) {
			e2(784);
			delay_ms(3000);	
		}
	}
}

task task2 {

	body {
		for (;;) {
			GPIO_SetBits(GPIOE, GPIO_Pin_9);
			delay_ms(200);
			GPIO_ResetBits(GPIOE, GPIO_Pin_9);
			delay_ms(200);
		}
	}
}



int main() {

	GPIO_InitTypeDef gpio;
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOE, ENABLE);
  RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
  GPIO_StructInit(&gpio);
  gpio.GPIO_Mode = GPIO_Mode_OUT;
  gpio.GPIO_Pin = LEDS;
  GPIO_Init(GPIOE, &gpio);
  gpio.GPIO_Pin = GPIO_Pin_0;
  gpio.GPIO_Mode = GPIO_Mode_IN;
  GPIO_Init(GPIOA, &gpio);
  
  task1.e2 += (int x) -> {
  	if (x == 784) {
  		if (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_0)) {
			GPIO_SetBits(GPIOE, GPIO_Pin_10);
			delay_ms(200);
			GPIO_ResetBits(GPIOE, GPIO_Pin_10);
			delay_ms(200);
		}
	}
  };
  
	startSheduler();
	
	return 0;

}
